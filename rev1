<html><head><base href=".">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <title>CHECK LIST PROGRAMA DE GERENCIAMENTO DE RISCOS</title>
    <style>
        body {
            max-width: 95%;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
            font-size: 16px;
            line-height: 1.6;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            color: #2c3e50;
        }

        .header {
            background: linear-gradient(135deg, #1976D2, #2196F3);
            padding: 40px;
            border-radius: 16px;
            margin-bottom: 40px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .header h1 {
            font-size: 2.2em;
            font-weight: 700;
            letter-spacing: 0.8px;
        }

        .company-info, .environment-container, .hazard-container {
            background: white;
            padding: 35px;
            border-radius: 16px;
            box-shadow: 0 6px 12px rgba(0,0,0,0.05);
            margin-bottom: 40px;
        }

        .form-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group label {
            font-size: 1em;
            font-weight: 600;
            margin-bottom: 12px;
            color: #34495e;
        }

        .form-group input, 
        .form-group textarea, 
        .form-group select,
        .env-input,
        .hazard-input {
            padding: 14px 16px;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-size: 15px;
            transition: all 0.25s ease;
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.02);
        }

        .environment-table th,
        .hazard-table th {
            background: linear-gradient(135deg, #1976D2, #2196F3);
            padding: 18px;
            font-size: 0.95em;
        }

        table {
            width: 100%;
            min-width: 800px;
            border-collapse: collapse;
        }

        td, th {
            padding: 10px;
            border: 1px solid #e0e0e0;
        }

        .env-input, .hazard-input {
            width: 100%;
            box-sizing: border-box;
        }

        .hazard-container, .environment-container {
            overflow-x: auto;
            margin-bottom: 30px;
        }

        .add-row-btn {
            color: white;
            border: none;
            cursor: pointer;
            transition: transform 0.2s;
            background: linear-gradient(135deg, #4CAF50, #45a049);
            padding: 14px 28px;
            border-radius: 12px;
            margin-bottom: 25px;
        }

        .remove-row-btn {
            background: #ff5252;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
        }

        .action-buttons {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 15px;
            margin: 30px 0;
        }

        .action-button {
            display: flex;
            align-items: center;
            gap: 8px;
            min-width: 200px;
            background: linear-gradient(135deg, #1976D2, #2196F3);
            color: white;
            border: none;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .action-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }

        .photo-input {
            max-width: 150px;
            font-size: 14px;
            padding: 8px !important;
        }

        .photo-preview {
            display: flex;
            flex-wrap: wrap;
            gap: 4px;
            margin-top: 4px;
            max-width: 150px;
        }

        .photo-preview img {
            width: 70px;
            height: 70px;
            object-fit: cover;
            border-radius: 4px;
        }

        .photo-container {
            position: relative;
            width: 70px;
            height: 70px;
        }

        .photo-delete {
            position: absolute;
            top: 2px;
            right: 2px;
            background: rgba(255, 0, 0, 0.8);
            color: white;
            border: none;
            border-radius: 50%;
            width: 16px;
            height: 16px;
            font-size: 10px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

        .environment-table th:last-child,
        .environment-table td:last-child {
            max-width: 160px;
            min-width: 160px;
            width: 160px;
        }

        @media (max-width: 1024px) {
            .environment-container {
                overflow-x: auto;
                padding: 20px;
            }
            
            .environment-table {
                min-width: 900px;
            }
        }

        @media (max-width: 768px) {
            .form-group {
                grid-template-columns: 1fr;
            }
            
            .action-button {
                width: 100%;
                justify-content: center;
            }
            
            table {
                font-size: 14px;
            }
            
            td, th {
                padding: 8px;
            }
        }

        .checkbox-group {
            display: flex;
            gap: 20px;
            align-items: center;
            padding: 14px 16px;
            background-color: #ffffff;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.02);
        }

        .checkbox-label {
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            font-weight: normal;
            margin: 0;
            flex-wrap: wrap;
        }

        .checkbox-label input[type="checkbox"] {
            width: 18px;
            height: 18px;
            cursor: pointer;
            accent-color: #1976D2;
        }

        .qty-input {
            width: 80px;
            padding: 4px 8px;
            margin-left: 8px;
            border: 1px solid #e9ecef;
            border-radius: 6px;
            font-size: 14px;
        }

        @media (max-width: 768px) {
            .checkbox-group {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            .qty-input {
                width: 100%;
                margin-left: 26px;
                margin-top: 4px;
            }
        }
        
        .signature-section {
            margin-bottom: 30px;
        }

        .signature-pad-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            padding: 20px;
        }

        #signaturePad {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            background-color: #fff;
            touch-action: none;
            width: 100%;
            max-width: 500px;
            height: 200px;
        }

        .signature-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        @media (max-width: 768px) {
            #signaturePad {
                max-width: 100%;
                height: 150px;
            }
            
            .signature-buttons {
                flex-direction: column;
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>CHECK LIST PROGRAMA DE GERENCIAMENTO DE RISCOS</h1>
    </div>

    <div class="company-info">
        <div class="form-group">
            <label for="empresa">Empresa:</label>
            <input type="text" id="empresa" name="empresa">
        </div>
        <div class="form-group">
            <label for="unidade">Unidade:</label>
            <input type="text" id="unidade" name="unidade">
        </div>
        <div class="form-group">
            <label for="cidade">Cidade/UF:</label>
            <input type="text" id="cidade" name="cidade">
        </div>
        <div class="form-group">
            <label for="cnpj">CNPJ:</label>
            <input type="text" id="cnpj" name="cnpj">
        </div>
        <div class="form-group">
            <label for="endereco">Endere&#xe7;o:</label>
            <input type="text" id="endereco" name="endereco">
        </div>
        <div class="form-group">
            <label for="total">Quantidade de Funcion&#xe1;rios - Total:</label>
            <input type="number" id="total" name="total">
        </div>
        <div class="form-group">
            <label>G&#xea;nero:</label>
            <div class="checkbox-group">
                <label class="checkbox-label">
                    <input type="checkbox" id="masculino" name="masculino">
                    Masculino
                    <input type="number" id="qtdMasculino" name="qtdMasculino" placeholder="Quantidade" min="0" class="qty-input">
                </label>
                <label class="checkbox-label">
                    <input type="checkbox" id="feminino" name="feminino">
                    Feminino
                    <input type="number" id="qtdFeminino" name="qtdFeminino" placeholder="Quantidade" min="0" class="qty-input">
                </label>
            </div>
        </div>
        <div class="form-group">
            <label for="horario">Hor&#xe1;rio de Funcionamento:</label>
            <input type="text" id="horario" name="horario">
        </div>
        <div class="form-group">
            <label for="data">Data do Levantamento:</label>
            <input type="date" id="data" name="data">
        </div>
        <div class="form-group">
            <label for="responsavel">Nome do Resp. T&#xe9;cnico:</label>
            <input type="text" id="responsavel" name="responsavel">
        </div>
        <div class="form-group">
            <label for="registro">Assinatura/Registro Profissional:</label>
            <input type="text" id="registro" name="registro">
        </div>
        <div class="form-group">
            <label for="respAcompanhamento">Resp. pelo Acompanhamento - Nome:</label>
            <input type="text" id="respAcompanhamento" name="respAcompanhamento">
        </div>
        <div class="form-group">
            <label for="assinaturaRG">Assinatura/RG:</label>
            <input type="text" id="assinaturaRG" name="assinaturaRG">
        </div>
        <div class="form-group">
            <label for="observacoes">Observa&#xe7;&#xf5;es Gerais:</label>
            <textarea id="observacoes" name="observacoes"></textarea>
        </div>
    </div>

    <div class="environment-container">
        <h2>Descri&#xe7;&#xe3;o dos Ambientes</h2>
        <button class="add-row-btn" onclick="addEnvironmentRow()">Adicionar Ambiente</button>
        <table class="environment-table" id="environmentTable">
            <thead>
                <tr>
                    <th>Setor/Local</th>
                    <th>P&#xe9; Direito</th>
                    <th>Paredes</th>
                    <th>Piso</th>
                    <th>Cobertura</th>
                    <th>Ventila&#xe7;&#xe3;o</th>
                    <th>Ilumina&#xe7;&#xe3;o</th>
                    <th>A&#xe7;&#xf5;es</th>
                    <th>Fotos</th>
                </tr>
            </thead>
            <tbody id="environmentTableBody">
                <tr>
                    <td><input type="text" name="setor[]" class="env-input"></td>
                    <td><input type="text" name="peDireito[]" class="env-input"></td>
                    <td><input type="text" name="paredes[]" class="env-input"></td>
                    <td><input type="text" name="piso[]" class="env-input"></td>
                    <td><input type="text" name="cobertura[]" class="env-input"></td>
                    <td><input type="text" name="ventilacao[]" class="env-input"></td>
                    <td><input type="text" name="iluminacao[]" class="env-input"></td>
                    <td><button class="remove-row-btn" onclick="removeEnvironmentRow(this)">Remover</button></td>
                    <td>
                      <input type="file" accept="image/*" multiple class="env-input photo-input" onchange="handlePhotoUpload(this)">
                      <div class="photo-preview"></div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="hazard-container">
        <h2>LEVANTAMENTO DE PERIGOS E RISCOS (PREENCHER POR CARGO)</h2>
        <button class="add-row-btn" onclick="addHazardRow()">Adicionar Cargo</button>
        <table class="hazard-table" id="hazardTable">
            <thead>
                <tr>
                    <th>PERIGO</th>
                    <th>FONTES E CIRCUNST&#xc2;NCIAS (CAUSAS)</th>
                    <th>SETOR</th>
                    <th>MEDIDAS DE CONTROLE EXISTENTES</th>
                    <th>LES&#xd5;ES OU AGRAVOS &#xc0; SAUDE</th>
                    <th>FREQU&#xca;NCIA</th>
                    <th>A&#xc7;&#xd5;ES</th>
                </tr>
            </thead>
            <tbody id="hazardTableBody">
                <tr>
                    <td><input type="text" name="perigo[]" class="hazard-input"></td>
                    <td><input type="text" name="fontesCircunstancias[]" class="hazard-input"></td>
                    <td><input type="text" name="setor[]" class="hazard-input"></td>
                    <td><input type="text" name="medidasControle[]" class="hazard-input"></td>
                    <td><input type="text" name="lesoes[]" class="hazard-input"></td>
                    <td>
                        <select name="frequencia[]" class="hazard-input">
                            <option value="ocasional">Ocasional</option>
                            <option value="intermitente">Intermitente</option>
                            <option value="permanente">Permanente</option>
                        </select>
                    </td>
                    <td><button class="remove-row-btn" onclick="removeHazardRow(this)">Remover</button></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="hazard-container">
        <h2>EPI UTILIZADOS</h2>
        <button class="add-row-btn" onclick="addEPIRow()">Adicionar EPI</button>
        <table class="hazard-table" id="epiTable">
            <thead>
                <tr>
                    <th>EPI</th>
                    <th>CA (Certificado de Aprova&#xe7;&#xe3;o)</th>
                    <th>A&#xc7;&#xd5;ES</th>
                </tr>
            </thead>
            <tbody id="epiTableBody">
                <tr>
                    <td><input type="text" name="epi[]" class="hazard-input"></td>
                    <td><input type="text" name="ca[]" class="hazard-input"></td>
                    <td><button class="remove-row-btn" onclick="removeEPIRow(this)">Remover</button></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="hazard-container">
        <h2>ATIVIDADES CR&#xcd;TICAS E OUTRAS CONDI&#xc7;&#xd5;ES AMBIENTAIS</h2>
        <button class="add-row-btn" onclick="addCriticalActivityRow()">Adicionar Atividade Cr&#xed;tica</button>
        <table class="hazard-table" id="criticalActivityTable">
            <thead>
                <tr>
                    <th>CARGO</th>
                    <th>SETOR</th>
                    <th>ATIVIDADE CR&#xcd;TICA/CONDI&#xc7;&#xc3;O AMBIENTAL</th>
                    <th>A&#xe7;&#xf5;es</th>
                </tr>
            </thead>
            <tbody id="criticalActivityTableBody">
                <tr>
                    <td><input type="text" name="cargo[]" class="hazard-input"></td>
                    <td><input type="text" name="setor[]" class="hazard-input"></td>
                    <td><input type="text" name="atividadeCritica[]" class="hazard-input"></td>
                    <td><button class="remove-row-btn" onclick="removeCriticalActivityRow(this)">Remover</button></td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="hazard-container">
        <h2>OBSERVA&#xc7;&#xd5;ES GERAIS SOBRE O CARGO</h2>
        <div class="form-group">
            <textarea id="observacoesCargo" name="observacoesCargo" style="width: 100%; min-height: 150px;"></textarea>
        </div>
    </div>

    <div class="hazard-container signature-section">
        <h2>ASSINATURA DIGITAL</h2>
        <div class="signature-pad-container">
            <canvas id="signaturePad" width="500" height="200"></canvas>
            <div class="signature-buttons">
                <button class="action-button" onclick="clearSignature()">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/>
                    </svg>
                    Limpar Assinatura
                </button>
                <button class="action-button" onclick="saveSignature()">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/>
                        <polyline points="17 21 17 13 7 13 7 21"/>
                        <polyline points="7 3 7 8 15 8"/>
                    </svg>
                    Salvar Assinatura
                </button>
            </div>
        </div>
    </div>

    <div class="action-buttons">
        <button class="action-button" onclick="sendReport()">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z"/>
            </svg>
            Enviar Relat&#xf3;rio
        </button>
        <button class="action-button" onclick="saveReport()">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/>
                <polyline points="17 21 17 13 7 13 7 21"/>
                <polyline points="7 3 7 8 15 8"/>
            </svg>
            Salvar Relat&#xf3;rio
        </button>
        <button class="action-button" onclick="generatePDF()">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14 2 14 8 20 8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10 9 9 9 8 9"/>
            </svg>
            Gerar PDF
        </button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/signature_pad@4.0.0/dist/signature_pad.umd.min.js"></script>
    <script>
        function handlePhotoUpload(input) {
            const previewContainer = input.parentNode.querySelector('.photo-preview');
            const files = input.files;
            const maxPhotos = 4;
            if (previewContainer.children.length + files.length > maxPhotos) {
                alert(`Máximo de ${maxPhotos} fotos permitido`);
                input.value = '';
                return;
            }
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                if (file.size > 5000000) {
                    alert('Arquivo muito grande. Tamanho máximo: 5MB');
                    continue;
                }
                const reader = new FileReader();
                reader.onload = () => {
                    const container = document.createElement('div');
                    container.className = 'photo-container';
                    const img = document.createElement('img');
                    img.src = reader.result;
                    const deleteButton = document.createElement('button');
                    deleteButton.className = 'photo-delete';
                    deleteButton.innerHTML = '×';
                    deleteButton.title = 'Remover foto';
                    deleteButton.addEventListener('click', e => {
                        e.preventDefault();
                        container.remove();
                    });
                    container.appendChild(img);
                    container.appendChild(deleteButton);
                    previewContainer.appendChild(container);
                };
                reader.readAsDataURL(file);
            }
        }

        let signaturePad;
        
        document.addEventListener('DOMContentLoaded', function() {
            const canvas = document.getElementById('signaturePad');
            signaturePad = new SignaturePad(canvas, {
                backgroundColor: 'rgb(255, 255, 255)',
                penColor: 'rgb(0, 0, 0)'
            });
            
            // Adjust canvas size on window resize
            function resizeCanvas() {
                const ratio = Math.max(window.devicePixelRatio || 1, 1);
                canvas.width = canvas.offsetWidth * ratio;
                canvas.height = canvas.offsetHeight * ratio;
                canvas.getContext("2d").scale(ratio, ratio);
                signaturePad.clear();
            }
            
            window.addEventListener("resize", resizeCanvas);
            resizeCanvas();
        });
        
        function clearSignature() {
            signaturePad.clear();
        }
        
        function saveSignature() {
            if (signaturePad.isEmpty()) {
                alert('Por favor, forneça uma assinatura primeiro.');
                return;
            }
            
            const signatureData = signaturePad.toDataURL();
            // Here you can handle the signature data as needed
            // For example, store it in a hidden input field:
            let hiddenInput = document.getElementById('signatureData');
            if (!hiddenInput) {
                hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.id = 'signatureData';
                document.body.appendChild(hiddenInput);
            }
            hiddenInput.value = signatureData;
            
            alert('Assinatura salva com sucesso!');
        }
    </script>
</body>
</html>
